import React, { useState, useEffect } from 'react';
import { Scenario, Choice } from '@/types';

interface StoryScenarioProps {
  scenario: Scenario;
  choices: Choice[];
  onShowHistoricalContext: () => void;
  onMakeChoice: (choiceId: number) => void;
  historicalImpact: string | null;
}

const StoryScenario: React.FC<StoryScenarioProps> = ({
  scenario,
  choices,
  onShowHistoricalContext,
  onMakeChoice,
  historicalImpact
}) => {
  // Split description into paragraphs
  const descriptionParagraphs = scenario.description.split('\n\n');
  
  // Use a fixed default image for each period based on scenario time period
  const getDefaultImageForPeriod = (periodId: number): string => {
    switch (periodId) {
      case 1: return '/images/medieval-1745073049963.jpg';
      case 2: return '/images/renaissance-1745072243570.jpg';
      case 3: return '/images/industrial-1745071865798.jpg';
      case 4: return '/images/renaissance-1745072243570.jpg'; // Modern uses Renaissance image
      case 5: return '/images/industrial-1745072173186.jpg'; // Future uses Industrial image
      default: return '/images/medieval-1745073049963.jpg';
    }
  };

  // Track the current image URL being displayed
  const [displayedImageUrl, setDisplayedImageUrl] = useState<string>(
    scenario.imageUrl || getDefaultImageForPeriod(scenario.timePeriodId)
  );
  
  // When the scenario's image URL changes, update our state
  useEffect(() => {
    // Update whenever we get a new image URL from the API
    if (scenario.imageUrl) {
      console.log("Setting new image URL:", scenario.imageUrl);
      setDisplayedImageUrl(scenario.imageUrl);
    }
  }, [scenario.imageUrl]);

  return (
    <div className="max-w-6xl mx-auto px-4 py-8 md:py-12">
      <div className="grid md:grid-cols-2 gap-6 md:gap-8 lg:gap-12">
        {/* Left - Scene Description & Image */}
        <div className="frame-border p-6">
          <h2 className="font-cinzel text-2xl md:text-3xl mb-4 text-center">{scenario.title}</h2>
          
          <div className="mb-6 bg-black/20 relative h-64 sm:h-80 md:h-96 overflow-hidden rounded-md shadow-lg">
            {/* Using displayedImageUrl for the image */}
            <img 
              key={displayedImageUrl} // Force re-render when URL changes
              src={displayedImageUrl}
              alt={`Scene from ${scenario.title}`}
              className="w-full h-full object-cover"
              onLoad={(e) => {
                const target = e.target as HTMLImageElement;
                console.log(`Image loaded successfully: ${target.src}`);
              }}
              onError={(e) => {
                const target = e.target as HTMLImageElement;
                console.error(`Image failed to load: ${target.src}`);
                
                // Use our default image function to get a reliable image for this period
                const defaultImage = getDefaultImageForPeriod(scenario.timePeriodId);
                
                console.log(`Using default image for period: ${defaultImage}`);
                target.src = defaultImage;
                setDisplayedImageUrl(defaultImage);
              }}
            />
            <div className="absolute bottom-0 right-0 bg-brass/80 text-timeNavy text-xs p-1">
              Generated by Pexels API
            </div>
          </div>
          
          <div className="space-y-4 text-lg">
            {descriptionParagraphs.map((paragraph, index) => (
              <p key={index}>{paragraph}</p>
            ))}
            
            <button 
              className="mt-4 flex items-center text-brass hover:underline"
              onClick={onShowHistoricalContext}
            >
              <i className="fas fa-book-open mr-2"></i> Learn more about this historical period
            </button>
          </div>
        </div>
        
        {/* Right - Your Choices */}
        <div className="frame-border p-6">
          <div className="mb-4">
            <h3 className="font-cinzel text-xl mb-4 text-center">Your Choices</h3>
            <p className="mb-6 italic text-center text-sm opacity-70">What will you do? Your decision may alter the course of history...</p>
          </div>
          
          <div className="grid gap-4">
            {choices.map((choice) => (
              <button 
                key={choice.id}
                className="choice-card w-full text-left p-4 border border-brass/40 rounded-lg bg-medieval-primary/40 hover:bg-medieval-primary/60 transition-all duration-300 shadow-md"
                onClick={() => onMakeChoice(choice.id)}
              >
                <div className="font-medium mb-2">{choice.text}</div>
                <p className="text-sm opacity-80">{choice.description}</p>
              </button>
            ))}
          </div>
          
          <div className="mt-8 border-t border-brass/30 pt-4">
            <div className="flex items-center justify-between">
              <div>
                <h4 className="text-sm font-cinzel">Current Impact</h4>
                <p className="text-xs opacity-70">
                  {historicalImpact || "Your choices have not yet altered history"}
                </p>
              </div>
              <div className="text-brass">
                <i className="fas fa-hourglass-half text-2xl"></i>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default StoryScenario;
